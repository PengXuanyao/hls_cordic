

================================================================
== Vitis HLS Report for 'cordic'
================================================================
* Date:           Mon Oct  3 15:21:50 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        cordic
* Solution:       s_default (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z010-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.136 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       19|       19|  0.190 us|  0.190 us|   20|   20|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop    |       16|       16|         2|          1|          1|    16|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.74>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%alpha_V_3 = alloca i32 1"   --->   Operation 6 'alloca' 'alpha_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 7 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%empty_6 = alloca i32 1"   --->   Operation 8 'alloca' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 9 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i17 %full_alpha"   --->   Operation 10 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i17 %full_alpha, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %sin_out"   --->   Operation 12 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %sin_out, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %cos_out"   --->   Operation 14 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %cos_out, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%full_alpha_read = read i17 @_ssdm_op_Read.ap_auto.i17, i17 %full_alpha"   --->   Operation 16 'read' 'full_alpha_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%xi_V = alloca i64 1" [src/cordic.cpp:49]   --->   Operation 17 'alloca' 'xi_V' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%yi_V = alloca i64 1" [src/cordic.cpp:50]   --->   Operation 18 'alloca' 'yi_V' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%flag_delay_a_V = alloca i64 1" [src/cordic.cpp:52]   --->   Operation 19 'alloca' 'flag_delay_a_V' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 16> <RAM>
ST_1 : Operation 20 [1/1] (2.43ns)   --->   "%icmp_ln1494 = icmp_sgt  i17 %full_alpha_read, i17 25735"   --->   Operation 20 'icmp' 'icmp_ln1494' <Predicate = true> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (2.10ns)   --->   "%alpha_V = sub i17 51471, i17 %full_alpha_read"   --->   Operation 21 'sub' 'alpha_V' <Predicate = true> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (2.43ns)   --->   "%icmp_ln1495 = icmp_slt  i17 %full_alpha_read, i17 105337"   --->   Operation 22 'icmp' 'icmp_ln1495' <Predicate = true> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (2.10ns)   --->   "%alpha_V_4 = sub i17 79601, i17 %full_alpha_read"   --->   Operation 23 'sub' 'alpha_V_4' <Predicate = true> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node alpha_V_5)   --->   "%select_ln24 = select i1 %icmp_ln1495, i17 %alpha_V_4, i17 %full_alpha_read" [src/cordic.cpp:24]   --->   Operation 24 'select' 'select_ln24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.78ns) (out node of the LUT)   --->   "%alpha_V_5 = select i1 %icmp_ln1494, i17 %alpha_V, i17 %select_ln24"   --->   Operation 25 'select' 'alpha_V_5' <Predicate = true> <Delay = 0.78> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node flag_V)   --->   "%select_ln1494_1 = select i1 %icmp_ln1494, i2 2, i2 3"   --->   Operation 26 'select' 'select_ln1494_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node flag_V)   --->   "%or_ln1494 = or i1 %icmp_ln1494, i1 %icmp_ln1495"   --->   Operation 27 'or' 'or_ln1494' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.99ns) (out node of the LUT)   --->   "%flag_V = select i1 %or_ln1494, i2 %select_ln1494_1, i2 0"   --->   Operation 28 'select' 'flag_V' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%xi_V_addr = getelementptr i16 %xi_V, i64 0, i64 0" [src/cordic.cpp:54]   --->   Operation 29 'getelementptr' 'xi_V_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (2.32ns)   --->   "%store_ln54 = store i16 9949, i4 %xi_V_addr" [src/cordic.cpp:54]   --->   Operation 30 'store' 'store_ln54' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%yi_V_addr = getelementptr i16 %yi_V, i64 0, i64 0" [src/cordic.cpp:55]   --->   Operation 31 'getelementptr' 'yi_V_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (2.32ns)   --->   "%store_ln55 = store i16 0, i4 %yi_V_addr" [src/cordic.cpp:55]   --->   Operation 32 'store' 'store_ln55' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%flag_delay_a_V_addr = getelementptr i2 %flag_delay_a_V, i64 0, i64 0" [src/cordic.cpp:57]   --->   Operation 33 'getelementptr' 'flag_delay_a_V_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (2.32ns)   --->   "%store_ln57 = store i2 %flag_V, i4 %flag_delay_a_V_addr" [src/cordic.cpp:57]   --->   Operation 34 'store' 'store_ln57' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 16> <RAM>
ST_1 : Operation 35 [1/1] (1.70ns)   --->   "%store_ln66 = store i16 9949, i16 %empty_6" [src/cordic.cpp:66]   --->   Operation 35 'store' 'store_ln66' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 36 [1/1] (1.70ns)   --->   "%store_ln66 = store i16 0, i16 %empty" [src/cordic.cpp:66]   --->   Operation 36 'store' 'store_ln66' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 37 [1/1] (1.70ns)   --->   "%store_ln66 = store i17 %alpha_V_5, i17 %alpha_V_3" [src/cordic.cpp:66]   --->   Operation 37 'store' 'store_ln66' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 38 [1/1] (1.58ns)   --->   "%br_ln66 = br void %_ZgeILi17ELi3ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEbRK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EEi.exit.i" [src/cordic.cpp:66]   --->   Operation 38 'br' 'br_ln66' <Predicate = true> <Delay = 1.58>

State 2 <SV = 1> <Delay = 4.10>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%m = phi i5 %add_ln70, void, i5 0, void %_ifconv" [src/cordic.cpp:70]   --->   Operation 39 'phi' 'm' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (1.78ns)   --->   "%add_ln70 = add i5 %m, i5 1" [src/cordic.cpp:70]   --->   Operation 40 'add' 'add_ln70' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 41 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.36ns)   --->   "%icmp_ln66 = icmp_eq  i5 %m, i5 16" [src/cordic.cpp:66]   --->   Operation 42 'icmp' 'icmp_ln66' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%empty_7 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 43 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln66 = br i1 %icmp_ln66, void %_ZgeILi17ELi3ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEbRK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EEi.exit.i.split, void %_Z16cordic_calculate8ap_fixedILi17ELi3EL9ap_q_mode5EL9ap_o_mode3ELi0EE7ap_uintILi2EERS_ILi16ELi2ELS0_5ELS1_3ELi0EES6_RS4_.exit" [src/cordic.cpp:66]   --->   Operation 44 'br' 'br_ln66' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%p_load9 = load i16 %empty"   --->   Operation 45 'load' 'p_load9' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%p_load6 = load i16 %empty_6"   --->   Operation 46 'load' 'p_load6' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%m_cast = zext i5 %m" [src/cordic.cpp:70]   --->   Operation 47 'zext' 'm_cast' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%trunc_ln1333 = trunc i5 %m"   --->   Operation 48 'trunc' 'trunc_ln1333' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln1333 = zext i4 %trunc_ln1333"   --->   Operation 49 'zext' 'zext_ln1333' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (3.98ns)   --->   "%r = ashr i16 %p_load9, i16 %zext_ln1333"   --->   Operation 50 'ashr' 'r' <Predicate = (!icmp_ln66)> <Delay = 3.98> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.98> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i5 %add_ln70" [src/cordic.cpp:70]   --->   Operation 51 'zext' 'zext_ln70' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%xi_V_addr_2 = getelementptr i16 %xi_V, i64 0, i64 %zext_ln70" [src/cordic.cpp:70]   --->   Operation 52 'getelementptr' 'xi_V_addr_2' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (3.98ns)   --->   "%r_1 = ashr i16 %p_load6, i16 %zext_ln1333"   --->   Operation 53 'ashr' 'r_1' <Predicate = (!icmp_ln66)> <Delay = 3.98> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.98> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%yi_V_addr_2 = getelementptr i16 %yi_V, i64 0, i64 %zext_ln70" [src/cordic.cpp:71]   --->   Operation 54 'getelementptr' 'yi_V_addr_2' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%myarctan_addr = getelementptr i14 %myarctan, i64 0, i64 %m_cast"   --->   Operation 55 'getelementptr' 'myarctan_addr' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 56 [2/2] (2.32ns)   --->   "%myarctan_load = load i4 %myarctan_addr"   --->   Operation 56 'load' 'myarctan_load' <Predicate = (!icmp_ln66)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 14> <Depth = 16> <ROM>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%flag_delay_a_V_addr_2 = getelementptr i2 %flag_delay_a_V, i64 0, i64 %zext_ln70" [src/cordic.cpp:80]   --->   Operation 57 'getelementptr' 'flag_delay_a_V_addr_2' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (2.32ns)   --->   "%store_ln80 = store i2 %flag_V, i4 %flag_delay_a_V_addr_2" [src/cordic.cpp:80]   --->   Operation 58 'store' 'store_ln80' <Predicate = (!icmp_ln66)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 16> <RAM>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln0 = br void %_ZgeILi17ELi3ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEbRK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EEi.exit.i"   --->   Operation 59 'br' 'br_ln0' <Predicate = (!icmp_ln66)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.13>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%alpha_V_3_load = load i17 %alpha_V_3"   --->   Operation 60 'load' 'alpha_V_3_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%specloopname_ln64 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [src/cordic.cpp:64]   --->   Operation 61 'specloopname' 'specloopname_ln64' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i17.i32, i17 %alpha_V_3_load, i32 16"   --->   Operation 62 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/2] (2.32ns)   --->   "%myarctan_load = load i4 %myarctan_addr"   --->   Operation 63 'load' 'myarctan_load' <Predicate = true> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 14> <Depth = 16> <ROM>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i14 %myarctan_load" [src/cordic.cpp:68]   --->   Operation 64 'zext' 'zext_ln68' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%br_ln68 = br i1 %tmp, void %_ZN13ap_fixed_baseILi17ELi3ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2ILi16ELi2ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i223.i, void %_ZN13ap_fixed_baseILi17ELi3ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2ILi16ELi2ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i95.i" [src/cordic.cpp:68]   --->   Operation 65 'br' 'br_ln68' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (2.07ns)   --->   "%sub_ln703_2 = sub i16 %p_load6, i16 %r"   --->   Operation 66 'sub' 'sub_ln703_2' <Predicate = (!tmp)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (2.32ns)   --->   "%store_ln70 = store i16 %sub_ln703_2, i4 %xi_V_addr_2" [src/cordic.cpp:70]   --->   Operation 67 'store' 'store_ln70' <Predicate = (!tmp)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_3 : Operation 68 [1/1] (2.07ns)   --->   "%add_ln703 = add i16 %r_1, i16 %p_load9"   --->   Operation 68 'add' 'add_ln703' <Predicate = (!tmp)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (2.32ns)   --->   "%store_ln71 = store i16 %add_ln703, i4 %yi_V_addr_2" [src/cordic.cpp:71]   --->   Operation 69 'store' 'store_ln71' <Predicate = (!tmp)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_3 : Operation 70 [1/1] (2.10ns)   --->   "%sub_ln703_3 = sub i17 %alpha_V_3_load, i17 %zext_ln68"   --->   Operation 70 'sub' 'sub_ln703_3' <Predicate = (!tmp)> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (1.70ns)   --->   "%store_ln73 = store i16 %sub_ln703_2, i16 %empty_6" [src/cordic.cpp:73]   --->   Operation 71 'store' 'store_ln73' <Predicate = (!tmp)> <Delay = 1.70>
ST_3 : Operation 72 [1/1] (1.70ns)   --->   "%store_ln73 = store i16 %add_ln703, i16 %empty" [src/cordic.cpp:73]   --->   Operation 72 'store' 'store_ln73' <Predicate = (!tmp)> <Delay = 1.70>
ST_3 : Operation 73 [1/1] (1.70ns)   --->   "%store_ln73 = store i17 %sub_ln703_3, i17 %alpha_V_3" [src/cordic.cpp:73]   --->   Operation 73 'store' 'store_ln73' <Predicate = (!tmp)> <Delay = 1.70>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%br_ln73 = br void" [src/cordic.cpp:73]   --->   Operation 74 'br' 'br_ln73' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (2.07ns)   --->   "%add_ln703_1 = add i16 %r, i16 %p_load6"   --->   Operation 75 'add' 'add_ln703_1' <Predicate = (tmp)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (2.32ns)   --->   "%store_ln76 = store i16 %add_ln703_1, i4 %xi_V_addr_2" [src/cordic.cpp:76]   --->   Operation 76 'store' 'store_ln76' <Predicate = (tmp)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_3 : Operation 77 [1/1] (2.07ns)   --->   "%sub_ln703_4 = sub i16 %p_load9, i16 %r_1"   --->   Operation 77 'sub' 'sub_ln703_4' <Predicate = (tmp)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (2.32ns)   --->   "%store_ln77 = store i16 %sub_ln703_4, i4 %yi_V_addr_2" [src/cordic.cpp:77]   --->   Operation 78 'store' 'store_ln77' <Predicate = (tmp)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_3 : Operation 79 [1/1] (2.10ns)   --->   "%add_ln703_2 = add i17 %zext_ln68, i17 %alpha_V_3_load"   --->   Operation 79 'add' 'add_ln703_2' <Predicate = (tmp)> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (1.70ns)   --->   "%store_ln703 = store i16 %add_ln703_1, i16 %empty_6"   --->   Operation 80 'store' 'store_ln703' <Predicate = (tmp)> <Delay = 1.70>
ST_3 : Operation 81 [1/1] (1.70ns)   --->   "%store_ln703 = store i16 %sub_ln703_4, i16 %empty"   --->   Operation 81 'store' 'store_ln703' <Predicate = (tmp)> <Delay = 1.70>
ST_3 : Operation 82 [1/1] (1.70ns)   --->   "%store_ln703 = store i17 %add_ln703_2, i17 %alpha_V_3"   --->   Operation 82 'store' 'store_ln703' <Predicate = (tmp)> <Delay = 1.70>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 83 'br' 'br_ln0' <Predicate = (tmp)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 2.32>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%yi_V_addr_1 = getelementptr i16 %yi_V, i64 0, i64 15" [src/cordic.cpp:82]   --->   Operation 84 'getelementptr' 'yi_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [2/2] (2.32ns)   --->   "%mysin_V = load i4 %yi_V_addr_1" [src/cordic.cpp:82]   --->   Operation 85 'load' 'mysin_V' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%xi_V_addr_1 = getelementptr i16 %xi_V, i64 0, i64 15" [src/cordic.cpp:83]   --->   Operation 86 'getelementptr' 'xi_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [2/2] (2.32ns)   --->   "%mycos_V = load i4 %xi_V_addr_1" [src/cordic.cpp:83]   --->   Operation 87 'load' 'mycos_V' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "%flag_delay_a_V_addr_1 = getelementptr i2 %flag_delay_a_V, i64 0, i64 15" [src/cordic.cpp:84]   --->   Operation 88 'getelementptr' 'flag_delay_a_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 89 [2/2] (2.32ns)   --->   "%flag_delay_V = load i4 %flag_delay_a_V_addr_1" [src/cordic.cpp:84]   --->   Operation 89 'load' 'flag_delay_V' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 16> <RAM>

State 5 <SV = 3> <Delay = 4.39>
ST_5 : Operation 90 [1/2] (2.32ns)   --->   "%mysin_V = load i4 %yi_V_addr_1" [src/cordic.cpp:82]   --->   Operation 90 'load' 'mysin_V' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_5 : Operation 91 [1/2] (2.32ns)   --->   "%mycos_V = load i4 %xi_V_addr_1" [src/cordic.cpp:83]   --->   Operation 91 'load' 'mycos_V' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 16> <RAM>
ST_5 : Operation 92 [1/2] (2.32ns)   --->   "%flag_delay_V = load i4 %flag_delay_a_V_addr_1" [src/cordic.cpp:84]   --->   Operation 92 'load' 'flag_delay_V' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 16> <RAM>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "%write_ln110 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %sin_out, i16 %mysin_V" [src/cordic.cpp:110]   --->   Operation 93 'write' 'write_ln110' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (1.13ns)   --->   "%switch_ln99 = switch i2 %flag_delay_V, void, i2 2, void %_ZNK13ap_fixed_baseILi16ELi2ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEngEv.exit36.i, i2 3, void %_ZNK13ap_fixed_baseILi16ELi2ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEngEv.exit.i" [src/cordic.cpp:99]   --->   Operation 94 'switch' 'switch_ln99' <Predicate = true> <Delay = 1.13>
ST_5 : Operation 95 [1/1] (2.07ns)   --->   "%sub_ln703_1 = sub i16 0, i16 %mycos_V"   --->   Operation 95 'sub' 'sub_ln703_1' <Predicate = (flag_delay_V == 3)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%write_ln107 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %cos_out, i16 %sub_ln703_1" [src/cordic.cpp:107]   --->   Operation 96 'write' 'write_ln107' <Predicate = (flag_delay_V == 3)> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%br_ln108 = br void %_Z11post_cordic8ap_fixedILi16ELi2EL9ap_q_mode5EL9ap_o_mode3ELi0EES2_7ap_uintILi2EERS2_S5_.exit" [src/cordic.cpp:108]   --->   Operation 97 'br' 'br_ln108' <Predicate = (flag_delay_V == 3)> <Delay = 0.00>
ST_5 : Operation 98 [1/1] (2.07ns)   --->   "%sub_ln703 = sub i16 0, i16 %mycos_V"   --->   Operation 98 'sub' 'sub_ln703' <Predicate = (flag_delay_V == 2)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%write_ln103 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %cos_out, i16 %sub_ln703" [src/cordic.cpp:103]   --->   Operation 99 'write' 'write_ln103' <Predicate = (flag_delay_V == 2)> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%br_ln104 = br void %_Z11post_cordic8ap_fixedILi16ELi2EL9ap_q_mode5EL9ap_o_mode3ELi0EES2_7ap_uintILi2EERS2_S5_.exit" [src/cordic.cpp:104]   --->   Operation 100 'br' 'br_ln104' <Predicate = (flag_delay_V == 2)> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%write_ln111 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %cos_out, i16 %mycos_V" [src/cordic.cpp:111]   --->   Operation 101 'write' 'write_ln111' <Predicate = (flag_delay_V != 2 & flag_delay_V != 3)> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%br_ln112 = br void %_Z11post_cordic8ap_fixedILi16ELi2EL9ap_q_mode5EL9ap_o_mode3ELi0EES2_7ap_uintILi2EERS2_S5_.exit" [src/cordic.cpp:112]   --->   Operation 102 'br' 'br_ln112' <Predicate = (flag_delay_V != 2 & flag_delay_V != 3)> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%ret_ln135 = ret" [src/cordic.cpp:135]   --->   Operation 103 'ret' 'ret_ln135' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.75ns
The critical path consists of the following:
	wire read on port 'full_alpha' [16]  (0 ns)
	'icmp' operation ('icmp_ln1494') [20]  (2.43 ns)
	'select' operation ('select_ln1494_1') [26]  (0 ns)
	'select' operation ('flag.V') [28]  (0.993 ns)
	'store' operation ('store_ln57', src/cordic.cpp:57) of variable 'flag.V' on array 'flag_delay_a.V', src/cordic.cpp:52 [34]  (2.32 ns)

 <State 2>: 4.1ns
The critical path consists of the following:
	'phi' operation ('m', src/cordic.cpp:70) with incoming values : ('add_ln70', src/cordic.cpp:70) [40]  (0 ns)
	'add' operation ('add_ln70', src/cordic.cpp:70) [41]  (1.78 ns)
	'getelementptr' operation ('flag_delay_a_V_addr_2', src/cordic.cpp:80) [85]  (0 ns)
	'store' operation ('store_ln80', src/cordic.cpp:80) of variable 'flag.V' on array 'flag_delay_a.V', src/cordic.cpp:52 [86]  (2.32 ns)

 <State 3>: 6.14ns
The critical path consists of the following:
	'load' operation ('myarctan_load') on array 'myarctan' [61]  (2.32 ns)
	'add' operation ('add_ln703_2') [79]  (2.11 ns)
	'store' operation ('store_ln703') of variable 'add_ln703_2' on local variable 'alpha.V' [82]  (1.71 ns)

 <State 4>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('yi_V_addr_1', src/cordic.cpp:82) [89]  (0 ns)
	'load' operation ('mysin.V', src/cordic.cpp:82) on array 'yi.V', src/cordic.cpp:50 [90]  (2.32 ns)

 <State 5>: 4.4ns
The critical path consists of the following:
	'load' operation ('mycos.V', src/cordic.cpp:83) on array 'xi.V', src/cordic.cpp:49 [92]  (2.32 ns)
	'sub' operation ('sub_ln703_1') [98]  (2.08 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
