

================================================================
== Vitis HLS Report for 'cordic'
================================================================
* Date:           Mon Oct  3 15:58:10 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        cordic
* Solution:       s_pipeline (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z010-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.892 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       15|       15|  0.150 us|  0.150 us|   16|   16|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.42>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%full_alpha_read = read i17 @_ssdm_op_Read.ap_auto.i17, i17 %full_alpha" [src/cordic.cpp:124]   --->   Operation 5 'read' 'full_alpha_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (2.43ns)   --->   "%icmp_ln1494 = icmp_sgt  i17 %full_alpha_read, i17 25735"   --->   Operation 6 'icmp' 'icmp_ln1494' <Predicate = true> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 7 [1/1] (2.10ns)   --->   "%alpha_V = sub i17 51471, i17 %full_alpha_read"   --->   Operation 7 'sub' 'alpha_V' <Predicate = true> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 8 [1/1] (2.43ns)   --->   "%icmp_ln1495 = icmp_slt  i17 %full_alpha_read, i17 105337"   --->   Operation 8 'icmp' 'icmp_ln1495' <Predicate = true> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (2.10ns)   --->   "%alpha_V_1 = sub i17 79601, i17 %full_alpha_read"   --->   Operation 9 'sub' 'alpha_V_1' <Predicate = true> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.00ns) (grouped into LUT with out node alpha_V_2)   --->   "%select_ln24 = select i1 %icmp_ln1495, i17 %alpha_V_1, i17 %full_alpha_read" [src/cordic.cpp:24]   --->   Operation 10 'select' 'select_ln24' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.78ns) (out node of the LUT)   --->   "%alpha_V_2 = select i1 %icmp_ln1494, i17 %alpha_V, i17 %select_ln24"   --->   Operation 11 'select' 'alpha_V_2' <Predicate = true> <Delay = 0.78> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node flag_V)   --->   "%select_ln1494_1 = select i1 %icmp_ln1494, i2 2, i2 3"   --->   Operation 12 'select' 'select_ln1494_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node flag_V)   --->   "%or_ln1494 = or i1 %icmp_ln1494, i1 %icmp_ln1495"   --->   Operation 13 'or' 'or_ln1494' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.99ns) (out node of the LUT)   --->   "%flag_V = select i1 %or_ln1494, i2 %select_ln1494_1, i2 0"   --->   Operation 14 'select' 'flag_V' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 2 <SV = 1> <Delay = 6.79>
ST_2 : Operation 15 [2/2] (6.79ns)   --->   "%call_ret = call i34 @cordic_calculate, i17 %alpha_V_2, i2 %flag_V" [src/cordic.cpp:133]   --->   Operation 15 'call' 'call_ret' <Predicate = true> <Delay = 6.79> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 6.89>
ST_3 : Operation 16 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 16 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 17 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i17 %full_alpha"   --->   Operation 17 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i17 %full_alpha, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 19 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %sin_out"   --->   Operation 19 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %sin_out, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %cos_out"   --->   Operation 21 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %cos_out, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 22 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/2] (5.76ns)   --->   "%call_ret = call i34 @cordic_calculate, i17 %alpha_V_2, i2 %flag_V" [src/cordic.cpp:133]   --->   Operation 23 'call' 'call_ret' <Predicate = true> <Delay = 5.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%mysin_V = extractvalue i34 %call_ret" [src/cordic.cpp:133]   --->   Operation 24 'extractvalue' 'mysin_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%mycos_V = extractvalue i34 %call_ret" [src/cordic.cpp:133]   --->   Operation 25 'extractvalue' 'mycos_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%flag_delay_V = extractvalue i34 %call_ret" [src/cordic.cpp:133]   --->   Operation 26 'extractvalue' 'flag_delay_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%write_ln110 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %sin_out, i16 %mysin_V" [src/cordic.cpp:110]   --->   Operation 27 'write' 'write_ln110' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.13ns)   --->   "%switch_ln99 = switch i2 %flag_delay_V, void, i2 2, void %_ZNK13ap_fixed_baseILi16ELi2ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEngEv.exit36.i, i2 3, void %_ZNK13ap_fixed_baseILi16ELi2ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEngEv.exit.i" [src/cordic.cpp:99]   --->   Operation 28 'switch' 'switch_ln99' <Predicate = true> <Delay = 1.13>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%write_ln111 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %cos_out, i16 %mycos_V" [src/cordic.cpp:111]   --->   Operation 29 'write' 'write_ln111' <Predicate = (flag_delay_V != 2 & flag_delay_V != 3)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln112 = br void %_Z11post_cordic8ap_fixedILi16ELi2EL9ap_q_mode5EL9ap_o_mode3ELi0EES2_7ap_uintILi2EERS2_S5_.exit" [src/cordic.cpp:112]   --->   Operation 30 'br' 'br_ln112' <Predicate = (flag_delay_V != 2 & flag_delay_V != 3)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 2.07>
ST_4 : Operation 31 [1/1] (2.07ns)   --->   "%sub_ln703_1 = sub i16 0, i16 %mycos_V"   --->   Operation 31 'sub' 'sub_ln703_1' <Predicate = (flag_delay_V == 3)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%write_ln107 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %cos_out, i16 %sub_ln703_1" [src/cordic.cpp:107]   --->   Operation 32 'write' 'write_ln107' <Predicate = (flag_delay_V == 3)> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln108 = br void %_Z11post_cordic8ap_fixedILi16ELi2EL9ap_q_mode5EL9ap_o_mode3ELi0EES2_7ap_uintILi2EERS2_S5_.exit" [src/cordic.cpp:108]   --->   Operation 33 'br' 'br_ln108' <Predicate = (flag_delay_V == 3)> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (2.07ns)   --->   "%sub_ln703 = sub i16 0, i16 %mycos_V"   --->   Operation 34 'sub' 'sub_ln703' <Predicate = (flag_delay_V == 2)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%write_ln103 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %cos_out, i16 %sub_ln703" [src/cordic.cpp:103]   --->   Operation 35 'write' 'write_ln103' <Predicate = (flag_delay_V == 2)> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln104 = br void %_Z11post_cordic8ap_fixedILi16ELi2EL9ap_q_mode5EL9ap_o_mode3ELi0EES2_7ap_uintILi2EERS2_S5_.exit" [src/cordic.cpp:104]   --->   Operation 36 'br' 'br_ln104' <Predicate = (flag_delay_V == 2)> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%ret_ln135 = ret" [src/cordic.cpp:135]   --->   Operation 37 'ret' 'ret_ln135' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.42ns
The critical path consists of the following:
	wire read on port 'full_alpha' (src/cordic.cpp:124) [11]  (0 ns)
	'icmp' operation ('icmp_ln1494') [12]  (2.43 ns)
	'or' operation ('or_ln1494') [19]  (0 ns)
	'select' operation ('flag.V') [20]  (0.993 ns)

 <State 2>: 6.79ns
The critical path consists of the following:
	'call' operation ('call_ret', src/cordic.cpp:133) to 'cordic_calculate' [21]  (6.79 ns)

 <State 3>: 6.89ns
The critical path consists of the following:
	'call' operation ('call_ret', src/cordic.cpp:133) to 'cordic_calculate' [21]  (5.76 ns)
	blocking operation 1.13 ns on control path)

 <State 4>: 2.08ns
The critical path consists of the following:
	'sub' operation ('sub_ln703_1') [28]  (2.08 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
